name: Docker Image CI

on:
  push:
#     branches: [ main ]
    tags: [ 'ci-*' ]
    paths-ignore:
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]

jobs:
  generate-matrix:
    name: Generate matrix for build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Check changed files
      id: diff
      run: |
        # See https://github.community/t/check-pushed-file-changes-with-git-diff-tree-in-github-actions/17220/10
        if [ $GITHUB_BASE_REF ]; then
          # Pull Request
          git fetch origin $GITHUB_BASE_REF --depth=1
          export DIFF=$( git diff --name-only origin/$GITHUB_BASE_REF $GITHUB_SHA )
          echo "Diff between origin/$GITHUB_BASE_REF and $GITHUB_SHA"
        else
          # Push
          git fetch origin ${{ github.event.before }} --depth=1
          export DIFF=$( git diff --name-only ${{ github.event.before }} $GITHUB_SHA )
          echo "Diff between ${{ github.event.before }} and $GITHUB_SHA"
        fi
        echo "$DIFF"
        # Escape newlines (replace \n with %0A)
        echo "::set-output name=diff::$( echo "$DIFF" | sed ':a;N;$!ba;s/\n/%0A/g' )"

    - name: Set matrix for build
      id: set-matrix
      run: |
        # See https://stackoverflow.com/a/62953566/11948346
        DIFF="${{ steps.diff.outputs.diff }}"
        JSON="{\"include\":["

        # Loop by lines
        while read path; do
          # Set $directory to substring before /
          directory="$( echo $path | cut -d'/' -f1 -s )"

          echo "Current directory is: $directory, file path: $path"
          if [ "$directory" == .github ]; then
            continue # Exclude .github directory
          elif [ "$path" == *.rst ]; then
            continue # Exclude *.rst files
          elif [ "$path" == *.md ]; then
            continue # Exclude *.md files
          elif [ "$path" == *.yml ]; then
            continue # Exclude *.yml files
          fi

          # Set $os. "ubuntu-latest" by default. if directory starts with windows, then "windows-latest"
          os="ubuntu-latest"
          if [ "$directory" == windows* ]; then
            os="windows-latest"
          fi

          # Add build to the matrix only if it is not already included
          JSONline="{\"directory\": \"$directory\", \"os\": \"$os\"},"
          if [[ "$JSON" != *"$JSONline"* ]]; then
            JSON="$JSON$JSONline"
          fi
        done <<< "$DIFF"

        # Remove last "," and add closing brackets
        if [[ $JSON == *, ]]; then
          JSON="${JSON%?}"
        fi
        JSON="$JSON]}"
        echo $JSON

        # Set output
        echo "::set-output name=matrix::$( echo "$JSON" )"
        echo "Result Json: $JSON"

  build:
    name: Build "${{ matrix.directory }}" on ${{ matrix.os }}
    needs: generate-matrix
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          cd ${{ matrix.directory }}
          echo "${{ matrix.directory }} ${{ matrix.os }}"
    # - name: Get changed files
    #   run: |
    #     changed_file_list=()
    #     for i in $(git diff --name-only ${{ github.event.before }}..${{ github.event.after }});
    #     do
    #       changed_file_list += i
    #     done

    #     echo "::set-output name=CHANGED_FILES::${arr[@]}"
    #   id: changed_files

    # - run: echo "the changed files are ${{steps.changed_files.outputs.CHANGED_FILES}}"

    # - name: Set output
    #   id: vars
    #   run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
    # - name: Check output
    #   env:
    #     RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
    #   run: |
    #     echo $RELEASE_VERSION
    #     echo ${{ steps.vars.outputs.tag }}
  

    # - name: Login to DockerHub
    #   uses: docker/login-action@v1 
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
  
    # - name: Build and push
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     file: ${{steps.changed_files.outputs.CHANGED_FILES}}
    #     push: true
    #     tags: |
    #       ${{ secrets.DOCKERHUB_USERNAME }}/jupyterlab-base:${{ steps.vars.outputs.tag }}
